{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/NotFoundPage.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/HomePage.tsx","index.tsx"],"names":["getClassLink","isActive","classNames","Navbar","className","role","to","App","NotFoundPage","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","PeopleFilters","setSearchParams","query","get","currentCenturies","getAll","sex","type","placeholder","onChange","event","target","map","num","centuries","century","String","includes","filter","item","length","Loader","getLinkClass","person","PersonLink","slug","name","PeopleTable","people","sort","order","currentSlug","useParams","setSortOrder","sortQuery","born","died","mother","motherName","father","fatherName","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","preparedPeople","data","editedData","find","pers","useEffect","getPeople","catch","finally","filteredPeople","isPersonValidWithCentury","personSex","toLowerCase","Math","ceil","isPersonValid","defaultValid","nextPerson","localeCompare","HomePage","createRoot","document","getElementById","render","path","element","index"],"mappings":"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","file":"static/js/main.f63920df.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getClassLink = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getClassLink}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getClassLink}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const centuries = [16, 17, 18, 19, 20];\n  const query = searchParams.get('query') || null;\n  const currentCenturies = searchParams.getAll('centuries');\n\n  const getCenturies = (century: string) => {\n    return currentCenturies.includes(century)\n      ? currentCenturies.filter(item => item !== century)\n      : [century, ...currentCenturies];\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    if (event.target.value === '') {\n      params.delete('query');\n    } else {\n      params.set('query', event.target.value);\n    }\n\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={classNames({\n            'is-active': !searchParams.get('sex'),\n          })}\n          params={{\n            sex: null,\n          }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={classNames({\n            'is-active': searchParams.get('sex') === 'm',\n          })}\n          params={{\n            sex: 'm',\n          }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={classNames({\n            'is-active': searchParams.get('sex') === 'f',\n          })}\n          params={{\n            sex: 'f',\n          }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query || ''}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuries.map(num => (\n              <SearchLink\n                key={num}\n                params={{\n                  centuries: getCenturies(String(num)),\n                }}\n                className={classNames(\n                  'button',\n                  'mr-1',\n                  {\n                    'is-info': currentCenturies.includes(String(num)),\n                  },\n                )}\n                data-cy=\"century\"\n              >\n                {num}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              params={{\n                centuries: null,\n              }}\n              data-cy=\"centuryALL\"\n              className={classNames(\n                'button',\n                'is-success',\n                {\n                  'is-outlined': currentCenturies.length,\n                },\n              )}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          params={{\n            sex: null,\n            centuries: null,\n            query: null,\n          }}\n          className=\"button is-link is-outlined is-fullwidth\"\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nconst getLinkClass = (person: Person) => classNames({\n  'has-text-danger': person.sex === 'f',\n});\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={getLinkClass(person)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n  const { slug } = useParams();\n  const currentSlug = slug || '';\n\n  const setSortOrder = (sortQuery: string) => {\n    if (sort !== sortQuery) {\n      return { sort: sortQuery, order: null };\n    }\n\n    if (!order) {\n      return { sort, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  const getLinkClass = (value: string) => classNames(\n    'fas',\n    {\n      'fa-sort': sort !== value,\n    },\n    {\n      'fa-sort-up': sort === value && !order,\n    },\n    {\n      'fa-sort-down': sort === value && order,\n    },\n  );\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={setSortOrder('name')}\n              >\n                <span className=\"icon\">\n                  <i className={getLinkClass('name')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={setSortOrder('sex')}\n              >\n                <span className=\"icon\">\n                  <i className={getLinkClass('sex')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={setSortOrder('born')}\n              >\n                <span className=\"icon\">\n                  <i className={getLinkClass('born')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={setSortOrder('died')}\n              >\n                <span className=\"icon\">\n                  <i className={getLinkClass('died')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people?.map(person => (\n          <tr\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === currentSlug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {\n                person.mother\n                  ? <PersonLink person={person.mother} />\n                  : person.motherName || '-'\n              }\n            </td>\n            <td>\n              {\n                person.father\n                  ? <PersonLink person={person.father} />\n                  : person.fatherName || '-'\n              }\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [searchParams] = useSearchParams();\n\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || null;\n  const sex = searchParams.get('sex') || null;\n\n  const sort = searchParams.get('sort') || null;\n  const order = searchParams.get('order') || null;\n\n  const preparedPeople = (data: Person[]) => {\n    const editedData = data.map(person => {\n      let father;\n      let mother;\n\n      if (person.motherName) {\n        mother = data.find(pers => pers.name === person.motherName);\n      }\n\n      if (person.fatherName) {\n        father = data.find(pers => pers.name === person.fatherName);\n      }\n\n      return { ...person, father, mother };\n    });\n\n    setPeople(editedData);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(preparedPeople)\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredPeople = people?.filter(person => {\n    const isPersonValidWithCentury = (personSex: string) => (\n      person.name.toLowerCase().includes(query)\n      && person.sex === personSex\n      && centuries.includes(\n        String(Math.ceil(person.born / 100)),\n      ));\n\n    const isPersonValid = (personSex: string) => {\n      return person.name.toLowerCase().includes(query)\n        && person.sex === personSex;\n    };\n\n    const defaultValid = person.name.toLowerCase().includes(query);\n\n    if (centuries.length !== 0) {\n      switch (sex) {\n        case 'm':\n          return (\n            isPersonValidWithCentury('m')\n          );\n\n        case 'f':\n          return isPersonValidWithCentury('f');\n\n        default:\n          return defaultValid;\n      }\n    } else {\n      switch (sex) {\n        case 'm':\n          return isPersonValid('m');\n\n        case 'f':\n          return isPersonValid('f');\n\n        default:\n          return defaultValid;\n      }\n    }\n  }).sort((person, nextPerson) => {\n    switch (sort) {\n      case 'name':\n        return !order\n          ? person.name.localeCompare(nextPerson.name)\n          : nextPerson.name.localeCompare(person.name);\n\n      case 'sex':\n        return !order\n          ? person.sex.localeCompare(nextPerson.sex)\n          : nextPerson.sex.localeCompare(person.sex);\n\n      case 'born':\n        return !order\n          ? person.born - nextPerson.born\n          : nextPerson.born - person.born;\n\n      case 'died':\n        return !order\n          ? person.died - nextPerson.died\n          : nextPerson.died - person.died;\n\n      default:\n        return 0;\n    }\n  }) || [];\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {\n                isLoading && (\n                  <Loader />\n                )\n              }\n\n              {\n                error && (\n                  <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n                )\n              }\n\n              {\n                (!error && !people?.length && !isLoading) && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )\n              }\n\n              {\n                (!filteredPeople.length && !isLoading && !error) && (\n                  <p>\n                    There are no people matching the current search criteria\n                  </p>\n                )\n              }\n\n              {\n                (!!people?.length && !!filteredPeople.length) && (\n                  <PeopleTable people={filteredPeople} />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path=\"home\" element={<Navigate to=\"..\" />} />\n          <Route path=\"people\">\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}